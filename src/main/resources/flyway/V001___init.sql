CREATE TABLE Users 
(
  USER_ID INT NOT NULL
, login VARCHAR2(20)
, email VARCHAR2(60)
, user_password VARCHAR2(128)
, CONSTRAINT USER_PK PRIMARY KEY(USER_ID)
);

CREATE TABLE Courses 
(
  COURSE_ID INT
, COURSE_DESCRIPTION VARCHAR2(300)  
, CONSTRAINT Courses_PK PRIMARY KEY(COURSE_ID)
);

CREATE TABLE QuestionWithOptions 
(
  QUESTION_ID INT NOT NULL
, QUESTION VARCHAR2(120)
, CONSTRAINT QUESTION_PK PRIMARY KEY(QUESTION_ID)
);

CREATE TABLE Subscriptions 
(
  USER_ID INT
, COURSE_ID INT
, TEST_STATUS VARCHAR2(30)
, CONSTRAINT Subscriptions_PK PRIMARY KEY(USER_ID,COURSE_ID)
, CONSTRAINT FK_COURSE FOREIGN KEY (COURSE_ID) 
  REFERENCES Courses(COURSE_ID)
, CONSTRAINT FK_USER FOREIGN KEY (USER_ID) 
  REFERENCES Users(USER_ID) 
);

CREATE TABLE TestQuestions 
(
  TEST_ID INT NOT NULL
, COURSE_ID INT 
, QUESTION_ID INT NOT NULL
, QUESTION_TYPE VARCHAR2(30)
, CONSTRAINT TEST_PK PRIMARY KEY(TEST_ID)
, CONSTRAINT FK_Question FOREIGN KEY (QUESTION_ID) 
  REFERENCES QuestionWithOptions(QUESTION_ID)
, CONSTRAINT FK_QuestionCOURSE FOREIGN KEY (COURSE_ID) 
  REFERENCES Courses(COURSE_ID)  
);

CREATE TABLE OptionOfAnswer 
(
  OPTION_ID INT NOT NULL 
, QUESTION_ID INT NOT NULL 
, OPTION_TEXT VARCHAR2(120)
, isCorrect CHAR(1)
, CONSTRAINT Option_PK PRIMARY KEY(OPTION_ID)
, CONSTRAINT FK_QUESTION_ID FOREIGN KEY (QUESTION_ID) 
  REFERENCES QuestionWithOptions(QUESTION_ID)
);