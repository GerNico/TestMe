CREATE TABLE COURSE_PROGRESS
(
  COURSE_PROGRESS_ID LONG NOT NULL AUTO_INCREMENT
    primary key,
  COURSE_ID          LONG,
  SUSCRIBER_ID       LONG,
  FOREIGN KEY (COURSE_ID) REFERENCES COURSES (COURSE_ID),
  FOREIGN KEY (SUSCRIBER_ID) REFERENCES USERS (USER_ID)
);

CREATE TABLE PASSED_TEST
(
  PASSED_TEST_ID     LONG not null AUTO_INCREMENT
    primary key,
  START_DATE         DATE not null,
  LAST_CHANGE_DATE   DATE not null,
  TEST_ID            LONG,
  COURSE_PROGRESS_ID LONG,
  FOREIGN KEY (TEST_ID) REFERENCES TESTS (TEST_ID),
  FOREIGN KEY (COURSE_PROGRESS_ID) REFERENCES COURSE_PROGRESS (COURSE_PROGRESS_ID)
);

CREATE TABLE ANSWER
(
  ANSWER_ID      LONG    NOT NULL AUTO_INCREMENT
    primary key,
  QUESTION_ID    LONG    NOT NULL,
  PASSED_TEST_ID LONG    NOT NULL,
  IS_CORRECT     BOOLEAN NOT NULL,
  GIVEN_ANSWER   VARCHAR(200),
  FOREIGN KEY (QUESTION_ID)
  REFERENCES QUESTIONS (QUESTION_ID),
  FOREIGN KEY (PASSED_TEST_ID) REFERENCES
    PASSED_TEST (PASSED_TEST_ID)
);

CREATE TABLE ANSWER_DETAILS
(
  ID        LONG AUTO_INCREMENT
    primary key,
  ANSWER_ID LONG,
  CONTENT   VARCHAR(200),
  FOREIGN KEY (ANSWER_ID) REFERENCES ANSWER (ANSWER_ID)
);