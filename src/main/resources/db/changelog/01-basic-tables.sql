CREATE TABLE USER
(
  ID            LONG               NOT NULL AUTO_INCREMENT    primary key,
  LOGIN         VARCHAR(20) UNIQUE NOT NULL,
  EMAIL         VARCHAR(60) UNIQUE NOT NULL,
  USER_ROLE     VARCHAR(20)        NOT NULL,
  PASSWORD      VARCHAR(128)       NOT NULL
);

CREATE TABLE TOPIC
( ID         LONG NOT NULL AUTO_INCREMENT    primary key,
  TOPIC_NAME VARCHAR(50) UNIQUE
);

CREATE TABLE COURSE
(
  ID          LONG AUTO_INCREMENT    primary key,
  COURSE_NAME         VARCHAR(200) UNIQUE,
  COURSE_DESCRIPTION  VARCHAR(800) NOT NULL,
  COURSE_PICT_URL     VARCHAR (2083),
  TOPIC_ID            LONG NOT NULL,
  AUTHOR_ID           LONG NOT NULL,
  ESTIMATE            LONG NOT NULL,
    CONSTRAINT FK_AUTHOR FOREIGN KEY (AUTHOR_ID) REFERENCES USER (ID),
    CONSTRAINT FK_TOPIC  FOREIGN KEY (TOPIC_ID) REFERENCES TOPIC (ID)
);

CREATE TABLE TEST
(
  ID               LONG NOT NULL AUTO_INCREMENT    primary key,
  COURSE_ID        LONG,
  ORDER_INDEX      LONG,
  TEST_DESCRIPTION VARCHAR(120),
  CONSTRAINT FK_BASE_COURSE FOREIGN KEY (COURSE_ID) REFERENCES COURSE (ID)
);

CREATE TABLE QUESTION
(
  ID               LONG NOT NULL AUTO_INCREMENT    primary key,
  TEST_ID          LONG,
  SCORE            LONG,
  QUESTION         VARCHAR(600) UNIQUE,
    CONSTRAINT FK_BASE_TEST FOREIGN KEY (TEST_ID) REFERENCES TEST (ID)
);

CREATE TABLE OPTION
(
  ID                  LONG NOT NULL AUTO_INCREMENT  primary key,
  QUESTION_ID         LONG,
  OPTION_TEXT         VARCHAR(120),
  IS_CORRECT          BOOLEAN       default false,
      CONSTRAINT FK_OPTION_BASE_QUESTION FOREIGN KEY (QUESTION_ID) REFERENCES QUESTION (ID)
);

CREATE TABLE SEQUENCE_BASED_OPTION
(
  ID                  LONG NOT NULL AUTO_INCREMENT  primary key,
  QUESTION_ID         LONG,
  OPTION_TEXT         VARCHAR(120),
  TOTAL_IN_SEQUENCE   Long NOT NULL,
  INDEX_IN_SEQUENCE   Long NOT NULL,
    CONSTRAINT FK_SEQUENCE_OPTION_BASE_QUESTION  FOREIGN KEY (QUESTION_ID) REFERENCES QUESTION (ID)
);